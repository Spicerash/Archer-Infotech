
	--------------------------- Array -------------------------------

	- Def: Array is derived data type, which is indexed collection of ordered 	  	  elements, having same data type, which are continously arranged in the memory.

	- Why we need array?

	- Decl. of array:
 	   Syntax:
		<data_type> <arr_nm>[<No_of_elements>];

		e.g.
		  int x[5];	  float elm[10];	char data[50];

		x  ____0_______1_______2______3________4____
		   |_______|_______|_______|_______|_______|

		- The array counting starts from zero.
		  (note that if element count is 5 the there are 0 to 4 positions)
		- indexed -> every position represented by unique position number
			     which starts from 0, called index.
		- Ordered -> The sequence of insertation is maintained.

		- x[i] represents the value stored at ith location.
		- &x[i] gives the address of ith location.
		

	- Init of Array: assignment at the time of decl.

		int x[5]={23,67,33,56,92};	or int x[]={23,67,33,56,92};

	// WAP to init and display the array of 5 nos

x ______0_______________1_______________2______________3_______________4_________
  |		|		|		|		|		|
  |	23	|	67	|	33	|	56	|	92	|
  |_____________|_______________|_______________|_______________|_______________|

int main()
{
	int x[]={23,67,33,56,92};

	printf("\n %d",x[0]);
	printf("\n %d",x[1]);
	printf("\n %d",x[2]);
	printf("\n %d",x[3]);
	printf("\n %d",x[4]);

	return 0;
}

// It will become simple using the loop

int main()
{
	int x[]={23,67,33,56,92};
	int i, pos=0;
	for(i=10;i<15;i++)
	{
		printf("\n %d",x[pos]);
		pos++;
	}
	return 0;
}

// using iterator i as a position indicator


#include <stdio.h>
int main()
{
	int x[5]={23,67,33,56,92};
	int i;
	printf("\n Array elements are: ");
	for(i=0;i<5;i++)
	{
		// printf("   %d",x[i]);
		//printf("\t %d",x[i]);
		printf("%6d",x[i]);
	}
	return 0;
}

//-----------------------------------------------------------------------------

	/// WAP to input and display the array of 7 elements.	

#include <stdio.h>
int main()
{
    // Decl - memory allocation
	int arr[7], i;
	
	// data input
	printf("\n Enter any 7 nos: ");
	for(i=0;i<7;i++)
	{
		scanf("%d",&arr[i]);
	}

    // data display
	printf("\n Elements are: ");
	for(i=0;i<7;i++)
	{
		printf("%8d",arr[i]);
	}
	return 0;
}

//--------------------------------------------------------------------------

	// Enter any 10 nos and count even and odd nos from it.

#include <stdio.h>
int main()
{
	int arr[10], i, ecnt=0, ocnt=0;
	
	printf("\n Enter any 10 nos: ");
	for(i=0;i<10;i++)
	{
		scanf("%d",&arr[i]);
	}
	
	// process
	for(i=0;i<10;i++)
	{
		if(arr[i]%2==0)
		{
			ecnt++;
		}
		else
		{
			ocnt++;
		}
	}
	printf("\n Elements are: ");
	for(i=0;i<10;i++)
	{
		printf("%8d",arr[i]);
	}
	printf("\n Even Count is %d and Odd count is: %d",ecnt,ocnt);
	return 0;
}

//----------------------------------------------------------------------------------

	// Enter the 10 nos and display the even and odd list from it.

#include <stdio.h>
#include <stdio.h>
int main()
{
	int arr[10], i, ecnt=0, ocnt=0;
	
	printf("\n Enter any 10 nos: ");
	for(i=0;i<10;i++)
	{
		scanf("%d",&arr[i]);
	}
	
	printf("\n Elements are: ");
	for(i=0;i<10;i++)
	{
		printf("%8d",arr[i]);
	}
	
	printf("\n Even Elements are: ");
	for(i=0;i<10;i++)
	{
	    if(arr[i]%2==0)
	    {
		    printf("%8d",arr[i]);
	    }
	}	
	
	printf("\n Odd Elements are: ");
	for(i=0;i<10;i++)
	{
	    if(arr[i]%2!=0)
	    {
		    printf("%5d",arr[i]);
	    }
	}
	return 0;
}

//-----------------------------------------------------------------------------------

	// Enter any 10 nos and display list of primes from it.









